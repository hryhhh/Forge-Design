name: CD

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'package.json'
      - 'rollup.config.js'
      - 'tsconfig.build.json'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build project
      run: npm run build
    
    - name: Verify build output
      run: |
        if [ ! -d "build" ]; then
          echo "Build directory not found"
          exit 1
        fi
        if [ ! -f "build/index.js" ]; then
          echo "Build file index.js not found"
          exit 1
        fi
        if [ ! -f "build/index.d.ts" ]; then
          echo "Type definitions not found"
          exit 1
        fi
        if [ ! -f "build/index.css" ]; then
          echo "CSS build not found"
          exit 1
        fi
        echo "All build files verified successfully"
    
    - name: Build Storybook
      run: npm run build-storybook
    
    - name: Deploy Storybook to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./storybook-static
        cname: ${{ vars.CUSTOM_DOMAIN }}
      if: github.ref == 'refs/heads/main'
    
    - name: Check and bump version
      run: |
        # 配置git用户信息
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 检查当前版本是否已发布
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        
        if npm view forge-design@$CURRENT_VERSION version 2>/dev/null; then
          echo "Version $CURRENT_VERSION already exists, bumping patch version"
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          
          # 提交版本更新
          git add package.json package-lock.json
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push
        else
          echo "Version $CURRENT_VERSION is new, proceeding with publish"
        fi
    
    - name: Publish to npm
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      if: success()
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.PACKAGE_VERSION }}
        name: Release v${{ env.PACKAGE_VERSION }}
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PACKAGE_VERSION: ${{ steps.version.outputs.version }}
      if: success()